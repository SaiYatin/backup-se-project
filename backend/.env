# ============================================
# BACKEND ENVIRONMENT VARIABLES (LOCAL SETUP)
# ============================================

# Environment
NODE_ENV=development

# Server Configuration
PORT=5000

# Database Configuration (Local PostgreSQL)
# Format: postgresql://username:password@localhost:port/database_name
DATABASE_URL=postgresql://postgres:bitch@localhost:5432/fundraising_db

# Alternative if you set custom username/password:
# DATABASE_URL=postgresql://fundraising_user:fundraising_pass@localhost:5432/fundraising_db

# JWT Configuration
# Generate a strong secret key using: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your_super_secret_jwt_key_change_this_in_production_12345678
JWT_EXPIRE=7d

# Email Configuration (OPTIONAL - leave empty if not using email features)
# For Gmail, you need an "App Password" not your regular password
# Get it from: https://myaccount.google.com/apppasswords
EMAIL_SERVICE=gmail
EMAIL_USER=
EMAIL_PASSWORD=

# CORS Configuration
FRONTEND_URL=http://localhost:5173

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Logging
LOG_LEVEL=info

# Database Pool Configuration (Optional - defaults work fine)
DB_POOL_MAX=10
DB_POOL_MIN=2

# ============================================
# NOTES:
# ============================================
# 1. EMAIL_USER and EMAIL_PASSWORD are OPTIONAL
#    - Leave empty if you don't want email notifications
#    - The app will work fine without them
#
# 2. To enable email notifications:
#    a. Use a Gmail account
#    b. Enable 2-Factor Authentication
#    c. Create an "App Password" at https://myaccount.google.com/apppasswords
#    d. Use that app password (16 characters) as EMAIL_PASSWORD
#
# 3. JWT_SECRET should be changed in production
#    Generate with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"